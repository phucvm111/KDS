package controller.admin.notifications;

import dal.NotificationDAO;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import model.Account;
import model.Notification;
import java.io.IOException;
import java.util.List;

public class AdminNotificationServlet extends HttpServlet {

    NotificationDAO dao = new NotificationDAO();

    // Ph∆∞∆°ng th·ª©c ki·ªÉm tra k√Ω t·ª± ƒë·∫∑c bi·ªát
    private boolean isValidInput(String input) {
        if (input == null || input.trim().isEmpty()) {
            return false;
        }
        // Allow English letters, numbers, Vietnamese characters, whitespace, and specific punctuation
        String regex = "^[\\p{L}0-9\\s.,:]+$";
        return input.matches(regex);
    }

    @Override

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            HttpSession session = request.getSession();
            Account admin = (Account) session.getAttribute("account");

            String reason = request.getParameter("reason");
            String content = request.getParameter("content");

            request.setAttribute("reason", reason);
            request.setAttribute("content", content);
            if (reason == null || reason.trim().isEmpty() || content == null || content.trim().isEmpty()) {
                List<Notification> sentNotifications = dao.getNotificationsBySender(admin.getAccountID());
                request.setAttribute("sentNotifications", sentNotifications);
                request.setAttribute("messageError", "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß l√Ω do v√† n·ªôi dung.");
                request.getRequestDispatcher("admin/admin_send_notification.jsp").forward(request, response);
                return; // D·ª´ng l·∫°i n·∫øu kh√¥ng h·ª£p l·ªá
            } else if (!isValidInput(reason) || !isValidInput(content)) {
                List<Notification> sentNotifications = dao.getNotificationsBySender(admin.getAccountID());
                request.setAttribute("sentNotifications", sentNotifications);
                request.setAttribute("messageError", "L√Ω do v√† n·ªôi dung kh√¥ng ƒë∆∞·ª£c ch·ª©a k√Ω t·ª± ƒë·∫∑c bi·ªát nh∆∞ ! @ #$%^&*.");
                request.getRequestDispatcher("admin/admin_send_notification.jsp").forward(request, response);
                return; // D·ª´ng l·∫°i n·∫øu c√≥ k√Ω t·ª± ƒë·∫∑c bi·ªát
            }

            // G·ª≠i th√¥ng b√°o ƒë·∫øn t·∫•t c·∫£ gi√°o vi√™n
            List<Account> teachers = dao.getAllTeachers();
            for (Account teacher : teachers) {
                dao.sendFromAdminToTeacher(admin, teacher, reason, content);
            }

            request.setAttribute("message", "G·ª≠i th√¥ng b√°o t·ªõi t·∫•t c·∫£ gi√°o vi√™n.");

            // üî• Quan tr·ªçng: L·∫•y l·∫°i danh s√°ch th√¥ng b√°o sau khi g·ª≠i
            List<Notification> sentNotifications = dao.getNotificationsBySender(admin.getAccountID());
            request.setAttribute("sentNotifications", sentNotifications);

        } catch (Exception e) {
            e.printStackTrace();
            request.setAttribute("messageError", "G·ª≠i th√¥ng b√°o th·∫•t b·∫°i.");

        }

        request.getRequestDispatcher("admin/admin_send_notification.jsp").forward(request, response);
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            HttpSession session = request.getSession();
            Account admin = (Account) session.getAttribute("account");

            List<Notification> sentNotifications = dao.getNotificationsBySender(admin.getAccountID());
            request.setAttribute("sentNotifications", sentNotifications);

            request.getRequestDispatcher("admin/admin_send_notification.jsp").forward(request, response);
        } catch (Exception e) {
            e.printStackTrace();
            request.setAttribute("error", "Kh√¥ng th·ªÉ t·∫£i danh s√°ch th√¥ng b√°o.");
            request.getRequestDispatcher("admin/admin_send_notification.jsp").forward(request, response);
        }
    }
}
