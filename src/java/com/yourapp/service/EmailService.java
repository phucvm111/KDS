package com.yourapp.service;

import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;


import java.util.List;
import java.util.Properties;
import model.Account;

public class EmailService {

    public static void sendEmail(String toEmail, String fullName) {
        final String username = "toandao626@gmail.com"; // Thay b·∫±ng email c·ªßa b·∫°n
        final String password = "eewt uwbp quzk ulwz";  // M·∫≠t kh·∫©u ·ª©ng d·ª•ng

        // C·∫•u h√¨nh SMTP
        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");

        // X√°c th·ª±c t√†i kho·∫£n Gmail
        Session session = Session.getInstance(props, new Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });

        try {
            // T·∫°o email
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(username));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(toEmail));
            message.setSubject("X√°c nh·∫≠n ph√™ duy·ªát t√†i kho·∫£n ‚úÖ");

            // N·ªôi dung email (H·ªó tr·ª£ UTF-8 & HTML)
            String emailContent = "<h2>Ch√†o " + fullName + ",</h2>"
                    + "<p>Ch√∫ng t√¥i xin th√¥ng b√°o r·∫±ng ƒë∆°n ƒëƒÉng k√Ω c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c <b>ph√™ duy·ªát th√†nh c√¥ng</b>! üéâ</p>"
                    + "<p>M√£ OPT l√†m b√†i thi c·ªßa b·∫°n l√†:123456 (l∆∞u √Ω h√£y ƒëƒÉng nh·∫≠p l·∫°i account tr∆∞·ªõc khi l√†m b√†i)</p>"
                    + "<p>N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>"
                    + "<p><b>Tr√¢n tr·ªçng,</b><br>ƒê·ªôi ng≈© h·ªó tr·ª£.</p>";

            message.setContent(emailContent, "text/html; charset=UTF-8");

            // G·ª≠i email
            Transport.send(message);
            System.out.println("‚úÖ Email ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng ƒë·∫øn " + toEmail);
        } catch (MessagingException e) {
            e.printStackTrace();
        }
    }

    public static void sendEmailgetPassword(String toEmail, String otp) {
        final String username = "toandao626@gmail.com";
        final String password = "eewt uwbp quzk ulwz";

        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");

        Session session = Session.getInstance(props, new Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });

        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(username));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(toEmail));
            message.setSubject("M√£ OTP c·ªßa b·∫°n");

            String emailContent = "<h3>M√£ OTP x√°c th·ª±c email l√†: <b>" + otp + "</b></h3>";
            message.setContent(emailContent, "text/html; charset=UTF-8");

            Transport.send(message);
            System.out.println("‚úÖ OTP ƒë√£ g·ª≠i ƒë·∫øn " + toEmail);
        } catch (MessagingException e) {
            e.printStackTrace();
        }
    }
    public static void sendReminderEmail(String toEmail, String parentName, String childName, String amount) {
    final String username = "toandao626@gmail.com";
    final String password = "eewt uwbp quzk ulwz"; // M·∫≠t kh·∫©u ·ª©ng d·ª•ng Gmail (App Password)

    Properties props = new Properties();
    props.put("mail.smtp.auth", "true");
    props.put("mail.smtp.starttls.enable", "true");
    props.put("mail.smtp.host", "smtp.gmail.com");
    props.put("mail.smtp.port", "587");

    Session session = Session.getInstance(props, new Authenticator() {
        protected PasswordAuthentication getPasswordAuthentication() {
            return new PasswordAuthentication(username, password);
        }
    });

    try {
        Message message = new MimeMessage(session);
        message.setFrom(new InternetAddress(username));
        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(toEmail));
        message.setSubject("üîî Nh·∫Øc nh·ªü h·ªçc ph√≠ cho b√© " + childName);

        // N·ªôi dung email HTML
        String emailContent = ""
            + "<h3>Xin ch√†o ph·ª• huynh <b>" + parentName + "</b>,</h3>"
            + "<p>H·ªá th·ªëng nh√† tr∆∞·ªùng xin th√¥ng b√°o r·∫±ng h·ªçc sinh <b>" + childName + "</b> "
            + "hi·ªán ƒëang c√≤n <b>" + amount + " VND</b> h·ªçc ph√≠ ch∆∞a n·ªôp.</p>"
            + "<p>Vui l√≤ng ho√†n t·∫•t kho·∫£n thanh to√°n tr∆∞·ªõc th·ªùi h·∫°n ƒë·ªÉ tr√°nh gi√°n ƒëo·∫°n h·ªçc t·∫≠p.</p>"
            + "<p>Tr√¢n tr·ªçng!</p>";

        message.setContent(emailContent, "text/html; charset=UTF-8");

        Transport.send(message);
        System.out.println("‚úÖ ƒê√£ g·ª≠i nh·∫Øc nh·ªü h·ªçc ph√≠ ƒë·∫øn: " + toEmail);
    } catch (MessagingException e) {
        e.printStackTrace();
    }
}


    public static void sendEmailcourse(String toEmail, String fullName) {
        final String username = "toandao626@gmail.com";
        final String password = "eewt uwbp quzk ulwz";
        // C·∫•u h√¨nh SMTP
        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");

        // X√°c th·ª±c t√†i kho·∫£n Gmail
        Session session = Session.getInstance(props, new Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });

        try {
            // T·∫°o email
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(username));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(toEmail));
            message.setSubject("X√°c nh·∫≠n ph√™ duy·ªát kh√≥a h·ªçc ‚úÖ");

            String emailContent = "<h2>Ch√†o " + fullName + ",</h2>"
                    + "<p>Ch√∫ng t√¥i xin th√¥ng b√°o r·∫±ng ƒë∆°n ƒëƒÉng k√Ω kh√≥a h·ªçc c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c <b>ph√™ duy·ªát th√†nh c√¥ng</b>! üéâ</p>"
                    + "<p>xin vui l√≤ng truy c·∫≠p link https://taplaixe.vn/bo-600-cau-hoi-ly-thuyet-thi-gplx ƒë·ªÉ h·ªçc tr∆∞·ªõc khi tham gia thi .</p>"
                    + "<p><b>Tr√¢n tr·ªçng,</b><br>ƒê·ªôi ng≈© h·ªó tr·ª£.</p>";

            message.setContent(emailContent, "text/html; charset=UTF-8");

            // G·ª≠i email
            Transport.send(message);
            System.out.println("‚úÖ Email ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng ƒë·∫øn " + toEmail);
        } catch (MessagingException e) {
            e.printStackTrace();
        }
    }

    public static void sendNotificationToRole(List<Account> accounts, String subject, String content) {
        final String username = "toandao626@gmail.com";
        final String password = "eewt uwbp quzk ulwz";

        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");

        Session session = Session.getInstance(props, new Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });

        for (Account acc : accounts) {
            try {
                Message message = new MimeMessage(session);
                message.setFrom(new InternetAddress(username));
                message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(acc.getEmail()));
                message.setSubject(subject);

                String htmlContent = "<h2>Xin ch√†o " + acc.getFirstName() + " " + acc.getLastName() + ",</h2>"
                        + "<p>" + content + "</p>"
                        + "<p><b>Tr√¢n tr·ªçng,</b><br>ƒê·ªôi ng≈© Admin Childcare</p>";

                message.setContent(htmlContent, "text/html; charset=UTF-8");

                Transport.send(message);
                System.out.println("‚úÖ Notification ƒë√£ g·ª≠i th√†nh c√¥ng ƒë·∫øn " + acc.getEmail());
            } catch (MessagingException e) {
                e.printStackTrace();
            }
        }
    }

    public static boolean sendNotificationToAccounts(List<Account> accounts, String subject, String content) {
        final String username = "toandao626@gmail.com";
        final String password = "eewt uwbp quzk ulwz";

        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");

        Session session = Session.getInstance(props, new Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });

        boolean allSuccess = true;

        for (Account acc : accounts) {
            if (acc.getEmail() == null || acc.getEmail().isEmpty()) {
                continue;
            }

            try {
                Message message = new MimeMessage(session);
                message.setFrom(new InternetAddress(username));
                message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(acc.getEmail()));
                message.setSubject(subject);

                String html = "<h3>Xin ch√†o " + acc.getFirstName() + " " + acc.getLastName() + ",</h3>"
                        + "<p>" + content + "</p>"
                        + "<p><b>Tr√¢n tr·ªçng,</b><br>ƒê·ªôi ng≈© Admin Childcare</p>";

                message.setContent(html, "text/html; charset=UTF-8");
                Transport.send(message);

                System.out.println("‚úÖ ƒê√£ g·ª≠i ƒë·∫øn: " + acc.getEmail());
            } catch (MessagingException e) {
                e.printStackTrace();
                allSuccess = false;
            }
        }
        return allSuccess;
    }

}
